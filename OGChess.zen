class Piece

    @Property
    var row
    
    @Property
    var column
    
    @Property
    var type
    
    @Property
    var captured
    
    @Property
    var color
    
    function new(row, column, type, captured, color)
        this.row = row
        this.column = column
        this.type = type
        this.captured = captured
        this.color = color

class ConsoleChess

    var engine

    function new(configuration)
        engine = new ChessEngine(configuration)

    function turn()
        var valid = false
        while !valid
            var player = engine.currentPlayer
            var move = prompt(player.name + ' [' + player.color + ']: ')
            valid = engine.move(move)

            if !valid
                print('[error] The specified move is invalid.')

    function start()
        while !engine.complete
            turn()
            turn()
            print(engine.board)

function main(...arguments)
    var player1Name = prompt('[Player 1] Name: ')
    var player2Name = prompt('[Player 2] Name: ')
    var configuration = {
        'player1': {
            'name' : player1Name
        },
        'player2': {
            'name' : player2Name
        }
    }

    var chess = new ConsoleChess(configuration)
    chess.start()